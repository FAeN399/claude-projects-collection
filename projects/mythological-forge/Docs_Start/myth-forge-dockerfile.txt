# Mythological Forge - Reproducible Environment
# Base image: Node.js for frontend tooling + Python for potential AI/ML integrations
FROM node:18-alpine AS base

# Install Python and system dependencies
RUN apk add --no-cache \
    python3=3.11.6-r0 \
    py3-pip=23.1.2-r0 \
    git=2.40.1-r0 \
    make=4.4.1-r1 \
    bash=5.2.15-r5 \
    # Required for node-gyp and native modules
    g++=12.2.1_git20220924-r10 \
    python3-dev=3.11.6-r0

# Set working directory
WORKDIR /app

# Copy package files first (leveraging Docker layer caching)
COPY package*.json ./
COPY requirements.txt ./

# Install Node dependencies with exact versions
RUN npm ci --only=production && \
    npm cache clean --force

# Create Python virtual environment and install dependencies
RUN python3 -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"
RUN pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY . .

# Build frontend assets
RUN npm run build

# Create non-root user for security
RUN addgroup -g 1001 -S mythforge && \
    adduser -S -u 1001 -G mythforge mythforge && \
    chown -R mythforge:mythforge /app

# Switch to non-root user
USER mythforge

# Expose port for web server
EXPOSE 3000

# Set environment variables
ENV NODE_ENV=production \
    MYTH_FORGE_VERSION=1.0.0 \
    PORT=3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=40s --retries=3 \
    CMD node healthcheck.js || exit 1

# Default command
CMD ["node", "server.js"]

# =============================================================================
# USAGE INSTRUCTIONS:
# =============================================================================
# 
# 1. Build the Docker image:
#    docker build -t mythforge:latest .
#
# 2. Run the container:
#    docker run -d -p 3000:3000 --name mythforge mythforge:latest
#
# 3. Access the application:
#    http://localhost:3000
#
# 4. For development with volume mounting:
#    docker run -d -p 3000:3000 -v $(pwd):/app --name mythforge-dev mythforge:latest
#
# 5. Environment variables can be overridden:
#    docker run -d -p 3000:3000 -e PORT=8080 mythforge:latest
#
# 6. To run with custom configuration:
#    docker run -d -p 3000:3000 -v $(pwd)/config:/app/config mythforge:latest
#
# =============================================================================